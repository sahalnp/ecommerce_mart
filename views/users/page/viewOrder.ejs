<%- include('../partials/header') %>
<head>
    <link rel="stylesheet" href="/assets/css/viewOrder.css">
</head>

<body>
    <!-- Slider -->
    <div class="slider-area">
        <div class="single-slider slider-height2 d-flex align-items-center">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                        <div class="hero-cap text-center">
                            <h2 class="name">View Order</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Order Header -->
    <div class="container">
        <div class="order-header">
            <h1 class="order-title">Order Details</h1>
            <div class="order-summary">
                <div class="summary-item">
                    <div class="summary-label">Ordered on</div>
                    <div class="summary-value"><%= new Date(order.OrderDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Order </div>
                    <div class="summary-value">#<%= order.OrderId %></div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Order Total</div>
                    <div class="summary-value">$<%= order.total %></div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Shipped to</div>
                    <div class="summary-value">
                        <%= Address?.name %><br>
                        <%= Address?.street %>, <%= Address?.localPlace %>
                    </div>
                </div>
            </div>

            <% const statusConfig = {
                'Delivered': { class: 'status-delivered', icon: '✓' },
                'Shipped': { class: 'status-shipped', icon: '🚚' },
                'Processing': { class: 'status-processing', icon: '⏳' },
                'Pending': { class: 'status-pending', icon: '📦' },
                'Cancelled': { class: 'status-cancelled', icon: '❌' }
            };
            const itemStatus = order.items && order.items.length > 0 ? order.items[0].status : null;
            const orderStatus = order.status || itemStatus || 'Pending';
            const currentStatus = statusConfig[orderStatus] || statusConfig['Pending'];
            %>

            <div class="delivery-status <%= currentStatus.class %>">
                <div class="status-icon"><%= currentStatus.icon %></div>
                <div class="status-text">
                    <div class="status-primary">
                        <% const displayStatus = order.status || (order.items && order.items.length > 0 ? order.items[0].status : 'Pending'); %>
                        <% if (displayStatus === "Delivered") { %>
                            Delivered <%= new Date(order.estimatedDelivery).toLocaleDateString() %>
                        <% } else { %>
                            <%= displayStatus %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="main-content">
            <div class="order-items">
                <div class="items-header">Items in this order</div>
                <% if (order.items && order.items.length > 0) { %>
                    <% order.items.forEach(item => { %>
                        <div class="item-card">
                            <div class="item-image">
                                <% if (item.product?.image?.[0]?.filepath) { %>
                                    <img src="<%= item.product.image[0].filepath %>" alt="<%= item.product.title || 'Product Image' %>">
                                <% } else { %>
                                    No Image
                                <% } %>
                            </div>
                            <div class="item-info">
                                <% if (item.product) { %>
                                    <a href="/product/<%= item.product._id %>" class="item-title"><%= item.product.title || 'Product Title Not Available' %></a>
                                    <div class="item-details" style="font-size: 13px;">
                                        <strong>Band Color:</strong> <%= item.product.bandColour || 'Not specified' %><br>
                                        <strong>Shape:</strong> <%= item.product.caseShape || 'Not specified' %><br>
                                        <strong>Sold by:</strong> M4.com Services LLC<br>
                                        <strong>Condition:</strong> New
                                    </div>
                                    <div class="item-price">$<%= item.product.pricing?.salePrice || '0.00' %></div>
                                    <div class="item-actions">
                                        <button class="btn btn-primary" onclick="buy('<%= item.product._id %>', <%= item.quantity %>)">Buy it again</button>
                                        <a href="/writedReview/<%= item.product._id %>"><button class="btn">Write a product review</button></a>
                                        <a href="/product/<%= item.product._id %>"><button class="btn">View your item</button></a>
                                    </div>
                                <% } else { %>
                                    <div class="item-title">Product information not available</div>
                                    <div class="item-details">This product may have been removed or is no longer available.</div>
                                    <div class="item-price">$<%= item.price || '0.00' %></div>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="item-card">
                        <div class="item-info">
                            <div class="item-title">No items found in this order</div>
                            <div class="item-details">This order appears to be empty or the items could not be loaded.</div>
                        </div>
                    </div>
                <% } %>
            </div>

            <!-- Sidebar -->
            <div class="sidebar">
                <div class="summary-card">
                    <div class="card-header">Order Summary</div>
                    <div class="card-content">
                        <div class="summary-row"><span>Item(s) Subtotal:</span><span>$<%= order.subtotal %></span></div>
                        <div class="summary-row"><span>Shipping & Handling:</span><span>$<%= order.shipping || '0.00' %></span></div>
                        <div class="summary-row"><span>Total before tax:</span><span>$<%= order.subtotal %></span></div>
                        <div class="summary-row"><span>Estimated tax:</span><span>$<%= order.tax %></span></div>
                        <div class="summary-row summary-total"><span><strong>Grand Total:</strong></span><span><strong>$<%= order.total %></strong></span></div>
                    </div>
                </div>

                <div class="summary-card">
                    <div class="card-header">Shipping Address</div>
                    <div class="card-content">
                        <div class="address-info">
                            <div class="address-title"><%= Address?.name || 'John Doe' %></div>
                            <%= Address.number %><br>
                            <%= Address?.street %>, <%= Address?.localPlace %><br>
                            <% if (Address?.landmark) { %><%= Address.landmark %><br><% } %>
                            <%= Address?.district %>, <%= Address?.city %><br>
                            <%= Address?.state %> - <%= Address?.pincode %><br>
                            <%= Address?.country %><br>
                            (<%= Address?.addressType %>)
                        </div>
                    </div>
                </div>

                <div class="summary-card">
                    <div class="card-header">Payment Method</div>
                    <div class="card-content">
                        <div class="payment-method"><span><%= order.paymentMethod %></span></div>
                        <div style="font-size: 12px; color: #565959;">Billing address same as shipping address</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Help Section -->
        <div class="help-section">
            <div class="help-title">Need help with your order?</div>
            <div class="help-links">
                <a href="#">Track your package</a>
               <% if (order.status === 'Delivered' && order.status !== 'Returned') { %>
    <a href="javascript:void(0)" onclick="confirmReturn()">Return items</a>
    <a href="/order/invoice/<%= order.OrderId %>">Print invoice</a>
<% } else if (order.status !== 'Cancelled' || order.status!== "Delivered") { %>
    <a href="javascript:void(0)" onclick="confirmCancel()">Cancel items</a>
<% } %>

                <!-- <a href="#">Leave delivery feedback</a>
                <a href="#">Report a problem with this order</a> -->
            </div>
        </div>
    </div>

    <!-- Modals -->
    <div class="modal-overlay" id="returnModal" style="display: none;">
        <div class="return-modal">
            <button class="close-btn" onclick="closeModal('returnModal')">×</button>
            <h3><strong>Why do you want to return this item?</strong></h3>
            <form onsubmit="submitReturn(event,'<%= order.OrderId %>')">
                <textarea id="returnReason" placeholder="Enter reason here..." required></textarea>
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>

    <div class="modal-overlay" id="cancelModal" style="display: none;">
        <div class="return-modal">
            <button class="close-btn" onclick="closeModal('cancelModal')">×</button>
            <h3><strong>Why do you want to cancel this order?</strong></h3>
            <form onsubmit="submitCancel(event, '<%= order.OrderId %>')">
                <textarea id="cancelReason" placeholder="Enter reason here..." required></textarea>
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>

<%- include('../partials/footer') %>

<script>
    const csrfToken = "<%= csrfToken %>";

    function openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) modal.style.display = 'flex';
    }

    function closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) modal.style.display = 'none';
    }

    function confirmReturn() {
        const confirmAction = confirm("Are you sure you want to return this item?");
        if (confirmAction) openModal('returnModal');
    }

    function confirmCancel() {
        const confirmAction = confirm("Are you sure you want to cancel this order?");
        if (confirmAction) openModal('cancelModal');
    }

    async function submitCancel(event, OrderId) {
        event.preventDefault();
        const reason = document.getElementById("cancelReason").value.trim();
        if (!reason) return alert("Please enter a reason.");

        try {
            await axios.post('/order/cancel', { _csrf: csrfToken, OrderId, reason });
            closeModal('cancelModal');
            alert("Order cancellation requested successfully.");
            setTimeout(() => window.location.reload(), 1000);
        } catch (error) {
            closeModal('cancelModal');
            alert("Something went wrong: " + (error.response?.data?.message || error.message));
        }
    }

    async function submitReturn(event, OrderId) {
        event.preventDefault();
        const reason = document.getElementById("returnReason").value.trim();
        if (!reason) return alert("Please enter a reason.");

        try {
            await axios.post('/order/return', { _csrf: csrfToken, OrderId, reason });
            closeModal('returnModal');
            alert("Return request submitted successfully.");
            setTimeout(() => window.location.reload(), 1000);
        } catch (error) {
            closeModal('returnModal');
            alert("Something went wrong: " + (error.response?.data?.message || error.message));
        }
    }

    async function buy(productId, quantity) {
        try {
            await axios.post('/buy', { productId, quantity, _csrf: csrfToken });
            setTimeout(() => window.location.href = '/checkout', 1000);
        } catch (error) {
            alert("Something went wrong: " + (error.response?.data?.message || error.message));
        }
    }

    // Optional: Click outside to close modal
    window.addEventListener('click', function(event) {
        ['returnModal', 'cancelModal'].forEach(modalId => {
            const modal = document.getElementById(modalId);
            if (event.target === modal) closeModal(modalId);
        });
    });
</script>
