<%- include('../partials/header') %>
<head>
  <link rel="stylesheet" href="/assets/css/index.css">
</head>

<main>
<% if (banners && banners.length > 0) { %>
  <div class="banner-container">
    <% banners.forEach((b, index) => { %>
      <div class="banner-slide <%= index === 0 ? 'active' : '' %>">
        <div class="banner-content">
          <h2><%= b.title %></h2>
          <p><%= b.description %></p>
          <a href="/product/<%= b.productId %>" class="shop-btn">Shop Now</a>
        </div>
        <div class="banner-img-wrapper">
          <img src="<%= b.image.filepath %>" alt="<%= b.title %>" class="banner-img">
        </div>
      </div>
    <% }) %>
    
    <div class="banner-indicators">
      <% banners.filter(b => b.status === 'Active').forEach((b, index) => { %>
        <div class="indicator <%= index === 0 ? 'active' : '' %>" data-slide="<%= index %>"></div>
      <% }) %>
    </div>
  </div>
<% } else { %>
  <!-- Default Static Hero -->
  <div class="banner-container">
    <div class="banner-slide active">
      <div class="banner-content">
        <h2>Select Your New Perfect Style</h2>
        <p>Discover timepieces that don't just tell time ‚Äî they tell your story. Elegance, precision, and personality in every tick.</p>
        <a href="/shop" class="shop-btn">Shop Now</a>
      </div>
      <div class="banner-img-wrapper">
        <img src="assets/img/hero/watch.png" alt="Luxury Watch" class="banner-img">
      </div>
    </div>
  </div>
<% } %>


  <div class="banner-indicators">
    <% banners.filter(b => b.status === 'active').forEach(() => { %>
      <div class="indicator"></div>
    <% }) %>
  </div>
</div>


    <!-- New Product Start -->
    <section class="new-product-area section-padding30">
        <div class="container">
            <div class="row">
                <div class="col-xl-12">
                    <div class="section-tittle mb-70">
                        <h2>New Arrivals</h2>
                    </div>
                </div>
            </div>

            <div class="row">
                <% prod.slice(0, 3).forEach(p => { %>
                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-6">
                    <div class="single-new-pro text-center">
                        <div class="product-img position-relative">
                            <a href="/product/<%= p._id %>">
                                <img src="<%= p.image[0].filepath %>" alt="<%= p.title %>" class="fixed-img">
                            </a>

                            <!-- Add to Cart Button -->
                            <div class="addtoCart">
                                <% if (cart.includes(String(p._id))) { %>
                                    <button onclick="goToCart()" class="add-cart-btn">
                                        <i class="fas fa-shopping-cart"></i> Go to Cart
                                    </button>
                                <% } else if (p.inStock <= 0) { %>
                                    <button class="add-cart-btn" disabled style="opacity: 0.5; cursor: not-allowed;">
                                        <i class="fas fa-shopping-cart"></i> Out of Stock
                                    </button>
                                <% } else { %>
                                    <button onclick="addToCart('<%= p._id %>')" class="add-cart-btn">
                                        <i class="fas fa-shopping-cart"></i> Add to Cart
                                    </button>
                                <% } %>
                            </div>

                            <!-- Wishlist Icon -->
                            <div class="favorit-items">
                                <i class="heart-icon <%= wish.some(w => w._id.toString() === p._id.toString()) ? 'fas liked' : 'far' %> fa-heart"
                                    onclick="toggleWishlist('<%= p._id %>', '<%= wish.some(w => w._id.toString() === p._id.toString()) ? 'true' : 'false' %>')"></i>
                            </div>
                        </div>

                        <div class="product-caption">
                            <h3><a href="/product/<%= p._id %>"><%= p.title %></a></h3>
                            <span>&#8377;<%= p.pricing.salePrice %></span>
                        </div>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>
    </section>

    <div class="row justify-content-center">
        <div class="room-btn pt-70">
            <a href="/shop" class="btn view-btn1">View More Products</a>
        </div>
    </div>

    <!-- Shop Method Area -->
    <div class="shop-method-area pt-5">
        <div class="container">
            <div class="method-wrapper">
                <div class="row d-flex justify-content-between">
                    <div class="col-xl-4 col-lg-4 col-md-6">
                        <div class="single-method mb-40">
                            <i class="ti-package"></i>
                            <h6>Free Shipping Method</h6>
                            <p>Fast and reliable delivery to your doorstep with no additional charges on orders above ‚Çπ999.</p>
                        </div>
                    </div>
                    <div class="col-xl-4 col-lg-4 col-md-6">
                        <div class="single-method mb-40">
                            <i class="ti-unlock"></i>
                            <h6>Secure Payment System</h6>
                            <p>Your transactions are protected with industry-standard encryption and secure payment gateways.</p>
                        </div>
                    </div>
                    <div class="col-xl-4 col-lg-4 col-md-6">
                        <div class="single-method mb-40">
                            <i class="ti-reload"></i>
                            <h6>Easy Return Policy</h6>
                            <p>Hassle-free returns within 30 days if you're not completely satisfied with your purchase.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Messages -->
    <div class="cart-toast">Item added to cart! üéâ</div>
    <div class="wishlist-toast">Item removed from wishlist! ‚ùå</div>
    <div class="stock-toast">Item is out of stock! üì¶</div>
</main>

<script>
// Auto-Sliding Banner JavaScript
let currentSlide = 0;
const slides = document.querySelectorAll('.banner-slide');
const indicators = document.querySelectorAll('.indicator');
const slider = document.getElementById('bannerSlider');
const totalSlides = slides.length;
let slideInterval;

function updateSlider() {
    slider.style.transform = `translateX(-${currentSlide * 100}%)`;
    
    // Update indicators
    indicators.forEach((indicator, index) => {
        indicator.classList.toggle('active', index === currentSlide);
    });

    // Reset animations for current slide
    const currentSlideElement = slides[currentSlide];
    const animatedElements = currentSlideElement.querySelectorAll('.hero__caption h1, .hero__caption p, .hero__btn, .hero__img');
    
    // Remove animation classes
    animatedElements.forEach(el => {
        el.style.animation = 'none';
    });
    
    // Trigger reflow
    currentSlideElement.offsetHeight;
    
    // Re-add animations
    setTimeout(() => {
        animatedElements.forEach((el, index) => {
            if (el.matches('.hero__caption h1')) {
                el.style.animation = 'slideInUp 1s ease forwards';
            } else if (el.matches('.hero__caption p')) {
                el.style.animation = 'slideInUp 1s ease 0.3s forwards';
            } else if (el.matches('.hero__btn')) {
                el.style.animation = 'slideInUp 1s ease 0.6s forwards';
            } else if (el.matches('.hero__img')) {
                el.style.animation = 'bounceIn 1s ease 0.4s forwards';
            }
        });
    }, 100);
}

function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    updateSlider();
}

function previousSlide() {
    currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
    updateSlider();
}

function goToSlide(slideIndex) {
    currentSlide = slideIndex;
    updateSlider();
}

function startSlideshow() {
    slideInterval = setInterval(nextSlide, 5000); // Change slide every 5 seconds
}

function stopSlideshow() {
    clearInterval(slideInterval);
}

// Initialize slider
updateSlider();
startSlideshow();

// Pause slideshow on hover
const bannerContainer = document.querySelector('.banner-container');
bannerContainer.addEventListener('mouseenter', stopSlideshow);
bannerContainer.addEventListener('mouseleave', startSlideshow);

// Existing cart and wishlist functionality
const csrfToken = "<%= csrfToken %>";

function showToast(selector, message, color = "#dc3545") {
    const toast = document.querySelector(selector);
    if (toast) {
        toast.textContent = message;
        toast.style.background = color;
        toast.style.display = "block";
        setTimeout(() => {
            toast.style.display = "none";
        }, 2000);
    }
}

async function addToCart(productId) {
    try {
        const res = await axios.post(
            "/product/add-to-cart",
            {
                productId,
                quantity: 1,
                _csrf: csrfToken,
            },
            {
                withCredentials: true,
                headers: {
                    "CSRF-Token": csrfToken,
                },
            }
        );

        // Success: Show toast and reload
        showToast(".cart-toast", "Item added to cart! üéâ", "#28a745");
        setTimeout(() => {
            window.location.reload();
        }, 2000);
    } catch (err) {
        console.error("Add to cart error:", err);
        alert("Failed to add item to cart.");
    }
}

async function toggleWishlist(productId, liked) {
    try {
        if (liked === "true") {
            await axios.post(`/wishlist/remove/${productId}`, { _csrf: csrfToken }, {
                withCredentials: true,
                headers: { "CSRF-Token": csrfToken }
            });

            showToast(".wishlist-toast", "Item removed from wishlist! ‚ùå");
        } else {
            await axios.post(`/wishlist/add/${productId}`, { _csrf: csrfToken }, {
                withCredentials: true,
                headers: { "CSRF-Token": csrfToken }
            });

            showToast(".wishlist-toast", "Item added to wishlist! ‚ù§Ô∏è", "#28a745");
        }

        const icon = document.querySelector(`.heart-icon[onclick*="${productId}"]`);
        if (icon) {
            if (liked === "true") {
                icon.classList.remove("fas", "liked");
                icon.classList.add("far");
                icon.setAttribute("onclick", `toggleWishlist('${productId}', 'false')`);
            } else {
                icon.classList.remove("far");
                icon.classList.add("fas", "liked");
                icon.setAttribute("onclick", `toggleWishlist('${productId}', 'true')`);
            }
        }
    } catch (err) {
        console.error("Wishlist toggle error:", err);
        alert("Failed to update wishlist.");
    }
}

function goToCart() {
    window.location.href = "/cart";
}

function showOutOfStockToast() {
    showToast(".stock-toast", "Item is out of stock! üì¶");
}
</script>
  <script>
        // Banner Slider Functionality
        document.addEventListener('DOMContentLoaded', function() {
            const slides = document.querySelectorAll('.banner-slide');
            const indicators = document.querySelectorAll('.indicator');
            let currentSlide = 0;
            const slideInterval = 4000;
            
            function showSlide(index) {
                // Hide all slides
                slides.forEach(slide => slide.classList.remove('active'));
                indicators.forEach(indicator => indicator.classList.remove('active'));
                
                // Show the current slide
                slides[index].classList.add('active');
                indicators[index].classList.add('active');
                currentSlide = index;
            }
            
            function nextSlide() {
                let nextIndex = (currentSlide + 1) % slides.length;
                showSlide(nextIndex);
            }
            
            // Set up automatic sliding
            let slideTimer = setInterval(nextSlide, slideInterval);
            
            // Add click events to indicators
            indicators.forEach((indicator, index) => {
                indicator.addEventListener('click', () => {
                    clearInterval(slideTimer);
                    showSlide(index);
                    slideTimer = setInterval(nextSlide, slideInterval);
                });
            });
            
            // Initial slide
            showSlide(0);
        });
    </script>

<%- include('../partials/footer') %>