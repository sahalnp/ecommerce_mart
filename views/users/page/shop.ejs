<%- include('../partials/header') %>
<head>
    <style>
        .hero-cap .name {
            font-size: clamp(2rem, 5vw, 3.5rem);
        }
        .slider-area {
            height: 400px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }
        .cart-toast {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background-color: #28a745;
            color: white;
            padding: 12px 20px;
            border-radius: 5px;
            box-shadow: 0 5px 10px rgba(0,0,0,0.2);
            font-weight: bold;
            z-index: 9999;
            display: none;
            transition: opacity 0.3s ease;
        }
        .single-slider {
            height: 100%;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .hero-cap h2 {
            font-size: 3rem;
            font-weight: bold;
            color: #0d1b2a;
        }
        
        /* Improved Wishlist Icon Styles */
        .favorit-items {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 10;
        }
        
        .heart-toggle {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            border: none;
            outline: none;
        }
        
        .heart-toggle:hover {
            background: rgba(255, 255, 255, 1);
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }
        
        .heart-toggle.loading {
            pointer-events: none;
            opacity: 0.7;
        }
        
        /* Heart icon using CSS */
        .heart-icon {
            width: 18px;
            height: 18px;
            position: relative;
            transition: all 0.3s ease;
        }
        
        .heart-icon::before,
        .heart-icon::after {
            content: '';
            width: 10px;
            height: 16px;
            position: absolute;
            left: 9px;
            transform: rotate(-45deg);
            background: #ccc;
            border-radius: 10px 10px 0 0;
            transform-origin: 0 100%;
            transition: all 0.3s ease;
        }
        
        .heart-icon::after {
            left: 0;
            transform: rotate(45deg);
            transform-origin: 100% 100%;
        }
        
        .heart-toggle[data-liked="true"] .heart-icon::before,
        .heart-toggle[data-liked="true"] .heart-icon::after {
            background: #ff4757;
        }
        
        .heart-toggle:hover .heart-icon::before,
        .heart-toggle:hover .heart-icon::after {
            background: #ff4757;
        }
        
        /* Loading spinner */
        .heart-loading {
            width: 16px;
            height: 16px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #ff4757;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Toast improvements */
        .wishlist-toast {
            position: fixed;
            bottom: 30px;
            left: 30px;
            background-color: #ff4757;
            color: white;
            padding: 12px 20px;
            border-radius: 5px;
            box-shadow: 0 5px 10px rgba(0,0,0,0.2);
            font-weight: bold;
            z-index: 9999;
            display: none;
            transition: opacity 0.3s ease;
        }
    </style>
</head>

<main>
    <!-- Hero Area Start-->
    <div class="slider-area">
        <div class="single-slider slider-height2 d-flex align-items-center">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                        <div class="hero-cap text-center">
                            <h2 class="name">Watch Shop</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Latest Products Start -->
    <section class="popular-items latest-padding">
        <div class="container">
            <div class="row product-btn justify-content-between mb-40">
                <div class="properties__button">
                    <nav>
                        <div class="nav nav-tabs" id="nav-tab" role="tablist">
                            <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">New Arrivals</a>
                            <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Price high to low</a>
                            <a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-contact" role="tab" aria-controls="nav-contact" aria-selected="false">Most Popular</a>
                        </div>
                    </nav>
                </div>

                <!-- Grid and List view -->
                <div class="grid-list-view"></div>

                <!-- Select items -->
                <div class="select-this">
                    <form action="#">
                        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                        <div class="select-itms">
                            <select name="select" id="select1">
                                <option value="">40 per page</option>
                                <option value="">50 per page</option>
                                <option value="">60 per page</option>
                                <option value="">70 per page</option>
                            </select>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Nav Card -->
            <div class="tab-content" id="nav-tabContent">
                <% ['home', 'profile', 'contact'].forEach(function(tab) { %>
                <div class="tab-pane fade <%= tab === 'home' ? 'show active' : '' %>" id="nav-<%= tab %>" role="tabpanel" aria-labelledby="nav-<%= tab %>-tab">
                    <div class="row">
                        <% for (let index = 0; index < product.length; index++) { %>
                        <div class="col-xl-4 col-lg-4 col-md-6 col-sm-6">
                            <div class="single-popular-items mb-50 text-center">
                                <div class="popular-img">
                                    <a href="/product/<%= product[index]._id %>">
                                        <img src="<%= product[index].image[0]?.filepath || 'default-image-path.jpg' %>" height="350px" alt="<%= product[index].title %>" />
                                    </a>
                                    <div class="img-cap">
                                        <% const inCart = cartItems && cartItems.some(item => item.productId.toString() === product[index]._id.toString()); %>
                                        <% if (inCart) { %>
                                            <a href="/cart"><span>Go to cart</span></a>
                                        <% } else { %>
                                            <a onclick="addToCart('<%= product[index]._id %>')"><span>Add to cart</span></a>
                                        <% } %>
                                    </div>
                                    <div class="favorit-items">
                                        <button 
                                            class="heart-toggle" 
                                            data-liked="<%= wish.some(w => w._id.toString() === product[index]._id.toString()) ? 'true' : 'false' %>" 
                                            data-product-id="<%= product[index]._id %>"
                                            title="<%= wish.some(w => w._id.toString() === product[index]._id.toString()) ? 'Remove from wishlist' : 'Add to wishlist' %>"
                                            aria-label="<%= wish.some(w => w._id.toString() === product[index]._id.toString()) ? 'Remove from wishlist' : 'Add to wishlist' %>">
                                            <div class="heart-icon"></div>
                                        </button>
                                    </div>
                                </div>
                                <div class="popular-caption">
                                    <h3><a href="/product/<%= product[index]._id %>"><%= product[index].title %></a></h3>
                                    <span>₹ &nbsp;<%= product[index].pricing.salePrice %></span>
                                </div>
                            </div>
                        </div>
                        <% } %>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>
    </section>

    <!-- Shop Method Start -->
    <div class="shop-method-area">
        <div class="container">
            <div class="method-wrapper">
                <div class="row d-flex justify-content-between">
                    <div class="col-xl-4 col-lg-4 col-md-6">
                        <div class="single-method mb-40">
                            <i class="ti-package"></i>
                            <h6>Free Shipping Method</h6>
                        </div>
                    </div>
                    <div class="col-xl-4 col-lg-4 col-md-6">
                        <div class="single-method mb-40">
                            <i class="ti-unlock"></i>
                            <h6>Secure Payment System</h6>
                            <p>aorem ixpsacdolor sit ameasecur adipisicing elitsf edasd.</p>
                        </div>
                    </div>
                    <div class="col-xl-4 col-lg-4 col-md-6">
                        <div class="single-method mb-40">
                            <i class="ti-reload"></i>
                            <h6>Secure Payment System</h6>
                            <p>aorem ixpsacdolor sit ameasecur adipisicing elitsf edasd.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="cart-toast">Item added to cart</div>
    <div class="wishlist-toast">Added to wishlist</div>

</main>

<script>
    const csrfToken = "<%= csrfToken %>";

    async function addToCart(productId) {
        try {
            const res = await axios.post(`/product/add-to-cart`, { productId, quantity: 1 }, {
                withCredentials: true,
                headers: {
                    'CSRF-Token': csrfToken,
                }
            });
            
            console.log("Added to cart", res.data);

            // Show toast
            const toast = document.querySelector('.cart-toast');
            if (toast) {
                toast.style.display = 'block';
                setTimeout(() => {
                    toast.style.display = 'none';
                    window.location.reload();
                }, 3000);
            }

        } catch (error) {
            console.error("Add to cart failed:", error);
            alert("Failed to add item to cart.");
        }
    }

    // Improved wishlist toggle handler
    document.addEventListener("click", function (e) {
        const button = e.target.closest(".heart-toggle");
        if (!button) return;

        const isLiked = button.getAttribute("data-liked") === "true";
        const productId = button.getAttribute("data-product-id");

        if (!productId) return alert("Product ID not found.");

        // Prevent multiple clicks during loading
        if (button.classList.contains('loading')) return;

        // Show loading state
        showLoadingState(button);

        if (isLiked) {
            removeFromWishlist(productId, button);
        } else {
            addWishlist(productId, button);
        }
    });

    function showLoadingState(button) {
        button.classList.add('loading');
        const heartIcon = button.querySelector('.heart-icon');
        heartIcon.innerHTML = '<div class="heart-loading"></div>';
    }

    function hideLoadingState(button) {
        button.classList.remove('loading');
        const heartIcon = button.querySelector('.heart-icon');
        heartIcon.innerHTML = '';
    }

    async function addWishlist(productId, button) {
        try {
            const res = await axios.post(`/wishlist/add/${productId}`, { _csrf: csrfToken }, { withCredentials: true });
            console.log("Added to wishlist", res.data);
            
            // Update button state
            button.setAttribute("data-liked", "true");
            button.setAttribute("title", "Remove from wishlist");
            button.setAttribute("aria-label", "Remove from wishlist");
            hideLoadingState(button);
            
            // Show success toast
            showWishlistToast("Added to wishlist ❤️");
            
        } catch (err) {
            hideLoadingState(button);
            showWishlistToast("Failed to add to wishlist", true);
            console.error("Add wishlist error: ", err);
        }
    }

    async function removeFromWishlist(productId, button) {
        try {
            const res = await axios.post(`/wishlist/remove/${productId}`, { _csrf: csrfToken }, { withCredentials: true });
            console.log("Removed from wishlist", res.data);
            
            // Update button state
            button.setAttribute("data-liked", "false");
            button.setAttribute("title", "Add to wishlist");
            button.setAttribute("aria-label", "Add to wishlist");
            hideLoadingState(button);
            
            // Show success toast
            showWishlistToast("Removed from wishlist");
            
        } catch (err) {
            hideLoadingState(button);
            showWishlistToast("Failed to remove from wishlist", true);
            console.error("Remove wishlist error: ", err);
        }
    }

    function showWishlistToast(message, isError = false) {
        const toast = document.querySelector('.wishlist-toast');
        if (toast) {
            toast.textContent = message;
            toast.style.backgroundColor = isError ? '#e74c3c' : '#ff4757';
            toast.style.display = 'block';
            setTimeout(() => {
                toast.style.display = 'none';
            }, 3000);
        }
    }
</script>

<%- include('../partials/footer') %>